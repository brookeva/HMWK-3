knitr::opts_chunk$set(echo = TRUE)
trip <- read.csv("4_Trip_Public.csv")
hh <- read.csv("1_Household_Public.csv")
per <- read.csv("2_Person_Public.csv")
veh <- read.csv("3_Vehicle_Public.csv")
trip <- read.csv("4_Trip_Public.csv")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
hh <- read.csv("1_Household_Public.csv")
per <- read.csv("2_Person_Public.csv")
veh <- read.csv("3_Vehicle_Public.csv")
trip <- read.csv("4_Trip_Public.csv")
sort(unique(hh$HH_ID))[sample(11:20, 1)]
#Random household = 101113
subset(trip[c(2,3,15,18,28:35)], HH_ID == 101113)
table(per$WK_MODE[per$P_WEIGHT])
round(table(per$WK_MODE[per$P_WEIGHT])/length(per$WK_MODE[per$P_WEIGHT]),3)
table(per$WK_MODE[per$P_WEIGHT])
round(table(per$WK_MODE[per$P_WEIGHT])/length(per$WK_MODE[per$P_WEIGHT]),3)
### Amount of People
sum(per$P_WEIGHT)
### Bikes
(column 5: 0.003 * 5627010?)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
hh <- read.csv("1_Household_Public.csv")
per <- read.csv("2_Person_Public.csv")
veh <- read.csv("3_Vehicle_Public.csv")
trip <- read.csv("4_Trip_Public.csv")
sort(unique(hh$HH_ID))[sample(11:20, 1)]
#Random household = 101113
subset(trip[c(2,3,15,18,28:35)], HH_ID == 101113)
table(per$WK_MODE[per$P_WEIGHT])
round(table(per$WK_MODE[per$P_WEIGHT])/length(per$WK_MODE[per$P_WEIGHT]),3)
### Amount of People
sum(per$P_WEIGHT)
### Bikes
(column 5: 0.003 * 5627010?)
View(veh)
table(trip$MODE_AGG[trip$P_WEIGHT])
round(table(trip$MODE_AGG[trip$P_WEIGHT])/length(trip$MODE_AGG[trip$P_WEIGHT]),3)
### Amount of People
sum(per$P_WEIGHT)
### Bikes
(column 5: 0.003 * 5627010?)
round(table(trip$MODE_AGG[trip$P_WEIGHT])/length(trip$MODE_AGG[trip$P_WEIGHT]),3)
summary(Trip$MODE_AGG)
summary(trip$MODE_AGG)
sum(trip$MODE_AGG, 2)
View(trip)
sum(trip$MODE_AGG[38, ])
sum(trip$MODE_AGG[ ,38])
library(dplyr)
sum(trip$MODE_AGG)
bikes <- trip$MODE_AGG[c(2)]
bikes <- count(trip$MODE_AGG(2))
Mode %>%
count(trip$MODE_AGG)
count(trip$MODE_AGG)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
hh <- read.csv("1_Household_Public.csv")
per <- read.csv("2_Person_Public.csv")
veh <- read.csv("3_Vehicle_Public.csv")
trip <- read.csv("4_Trip_Public.csv")
sort(unique(hh$HH_ID))[sample(11:20, 1)]
#Random household = 101113
subset(trip[c(2,3,15,18,28:35)], HH_ID == 101113)
df %>%
count(trip)
count?
### Amount of People
sum(per$P_WEIGHT)
Mode <- select(trip$MODE_AGG)
df%>% select(trip$MODE_AGG)
select(trip$MODE_AGG)
sum(trip$MODE_AGG ==2)
sum(trip$MODE_AGG =="2")
summary(trip$MODE_AGG)
select(trip$MODE_AGG)
summary(trip$MODE_AGG)
bike %>% count(trip)
count(trip$MODE_AGG)
count(trip$MODE_AGG=="2")
count(trip$MODE_AGG==2)
travel_mode <- as_tibble(trip) # so it prints a little nicer
select(trip$MODE_AGG, starts_with("2"))
select(trip)
travel_mode <- as_tibble(trip) # so it prints a little nicer
select(trip$MODE_AGG)
trip_mode <- trip
select(trip_mode, MODE_AGG,"2")
select(trip_mode, trip, MODE_AGG)
select(MODE_AGG, 2)
MODE_AGG <- trip$MODE_AGG
select(MODE_AGG ==2)
select(MODE_AGG,"2")
select(MODE_AGG,2)
select(MODE_AGG,38:)
sum(MODE_AGG,38:)
MODE_AGG <- trip$MODE_AGG %>%
count("2")
travel_mode <- trip
select(travel_mode,38:)
select(travel_mode,38: )
select(travel_mode,38:0)
travel_mode <- select(travel_mode,38:0)
count(travel_mode)
count(travel_mode,"2")
count(travel_mode=="2")
count(travel_mode==2)
count(travel_mode=2)
table(trip$MODE_AGG)
travel_mode %>%
count(2)
travel_mode %>%
count("2")
trip <- merge(trip, hh[c("HH_ID", "H_COUNTY", "INCOME")], by = "HH_ID")#Note that I added income here too
table(trip$MODE_AGG[trip$H_COUNTY ==  42101]) #Change county based on hh number
round(table(trip$MODE_AGG[trip$H_COUNTY == 42101])/sum(table(trip$MODE_AGG[trip$H_COUNTY == 42101])), 3)
#4. Give the weighted value of the percent of trips by car. (Hint: use the trip files with the person weights).
library(doBy)
trip <- merge(trip, hh[c("HH_ID", "H_COUNTY", "INCOME")], by = "HH_ID")#Note that I added income here too
table(trip$MODE_AGG[trip$H_COUNTY ==  42101]) #Change county based on hh number
round(table(trip$MODE_AGG[trip$H_COUNTY == 42101])/sum(table(trip$MODE_AGG[trip$H_COUNTY == 42101])), 3)
#4. Give the weighted value of the percent of trips by car. (Hint: use the trip files with the person weights).
install.packages(doBy)
library(doBy)
install.packages(doBy)
install.packages("doBy")
library(doBy)
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip,H_COUNTY == 42101) ,
FUN = sum),3) #Aggregate
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip, H_COUNTY == 42101) ,
FUN = sum),3) #Aggregate
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip,H_COUNTY == 42101),
FUN = sum) / sum(trip$P_WEIGHT[is.na(trip$MODE_AGG)==F & trip$H_COUNTY == 42101]),3) ##Percents quickly
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip,H_COUNTY == 42101),
FUN = sum) / sum(trip$P_WEIGHT[is.na(trip$MODE_AGG)==F & trip$H_COUNTY == 42101]),3) ##Percents quickly
trip <- merge(trip, hh[c("HH_ID", "H_COUNTY", "INCOME")], by = "HH_ID")
table(trip$MODE_AGG[trip$H_COUNTY ==  42101])
round(table(trip$MODE_AGG[trip$H_COUNTY == 42101])/sum(table(trip$MODE_AGG[trip$H_COUNTY == 42101])), 3)
library(doBy)
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip, H_COUNTY == 42101),
FUN = sum),3)
round(summaryBy(P_WEIGHT ~ MODE_AGG , data =subset(trip,H_COUNTY == 42101),
FUN = sum) / sum(trip$P_WEIGHT[is.na(trip$MODE_AGG)==F & trip$H_COUNTY == 42101]),3)
